




module icse18.Smtp;


type <dotnet> "System.UInt32" from "..." as string;


global protocol Smtp(role S, role C)
{
  220() from S to C;
  do Ehlo(S, C);
}

aux global protocol Ehlo(role S, role C)
{
  choice at C
  {
    Ehlo1() from C to S;
    rec X
    {
      choice at S
      {
        250d() from S to C;
        continue X;
      }
      or
      {
        250() from S to C;
        do StartTls(S, C);
      }
    }
  }
  or
  {
    Quit1() from C to S;
  }
}

aux global protocol StartTls(role S, role C)
{
  choice at C
  {
    StartTls() from C to S;
    220() from S to C;
    // Do TLS handshake here: level below the application level protocol (like regular TCP handshake)
    do SecureEhlo(S, C);
  }
  or
  {
    Quit2() from C to S;
  }
}

aux global protocol SecureEhlo(role S, role C)
{
  choice at C
  {
    Ehlo2() from C to S;
    rec X
    {
      choice at S
      {
        250d1() from S to C;
        continue X;
      }
      or
      {
        2501() from S to C;
        do Auth(S, C);
      }
    }
  }
  or
  {
    Quit3() from C to S;
  }
}

aux global protocol Auth(role S, role C)
{
  rec Y
  {
    choice at C
    {
      Auth() from C to S;
      choice at S
      {
        235() from S to C;
        do Mail(S, C);
      }
      or
      {
        535() from S to C;
        continue Y;
      }
      //.. 501 Invalid base64 Data
    }
    or
    {
      Quit4() from C to S;
    }
  }
}

aux global protocol Mail(role S, role C)
{
  rec Z1
  {
    choice at C
    {
      Mail() from C to S; //Mail from:<a@b.com>
      choice at S
      {
        501() from S to C;
        continue Z1;
      }
      or
      {
        2502() from S to C;

        rec Z2
        {
          choice at C
          {
            Rcpt() from C to S; //Rcpt to:<c@d.com>
            choice at S
            {
              2503() from S to C;
              continue Z2;
            }
          }
          or
          {
            Data() from C to S;
            354() from S to C;
            //too from C to S; //to:<you>
            //froom from C to S; //from:<me>
            rec Z3
            {
              choice at C
              {
                DataLine() from C to S;
                DataLine() from C to S;
                continue Z3;
              }
              or
              {
                Subject() from C to S; //Subject:<my Subject>
                Subject() from C to S; //Subject:<my Subject>
                continue Z3;
              }
              or
              {
                EndOfData() from C to S; // CRLF.CRLF
                2504() from S to C;
                continue Z1;
              }
            }
          }
        }
      }
    }
    or
    {
      Quit5() from C to S;
      221() from S to C;
    }
  }
}