



module demo.fase17.travel2.TravelAgent2;

type <java> "java.lang.Integer" from "rt.jar" as Int;
type <java> "java.lang.String" from "rt.jar" as String;


explicit global protocol TravelAgent2(role C, role A, role S)
{
	connect C to A;
	do Nego(C, A, S);
}

aux global protocol Nego(role C, role A, role S)
{
	choice at C
	{
		query(String) from C to A;
		quote(Int) from A to C;
		do Nego(C, A, S);
	}
	or
	{
		do Pay(C, A, S);
	}
}
		
aux global protocol Pay(role C, role A, role S)
{
	choice at C
	{
		accpt() from C to A;
		connect A to S;

		port(Int) from S to A;
		port(Int) from A to C;           // A should forward prev Int to C
		payment(String) connect C to S;  // C should connect to S at prev Int port  // FIXME: connect/accept message

//		port(p:Int) from S to A;
//		port(p) from A to C;
//		payment(String) connect C to S;  @port=p

		confirm(Int) from S to C;
	}
	or
	{
		reject() from C to A;
	}
}
