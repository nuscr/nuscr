module src.SupplierInfoOrig;

type <xsd> "UserName" from "AUTH.xsd" as username;
type <xsd> "Password" from "AUTH.xsd" as password;
type <xsd> "UUID" from "AUTH.xsd" as uuid;
type <xsd> "/retailhub/supplierdetails" from "Retailer.xsd" as supplierdetails;
type <xsd> "/retailhub/contractdetails" from "Retailer.xsd" as contractdetails;

type <java> "java.lang.Integer" from "rt.jar" as int;


global protocol PartnershipSupplier(  role loginsvc,
                    role requestor,
                    role authorisersvc,
                    role usersvc,
                    role filtersvc,
                    role suppliersvc,
                    role contractsvc)
{
  login(username, password) from requestor to loginsvc;
  choice at loginsvc
  {
    loginfailure() from loginsvc to requestor;
  } or {
    loginsuccess() from loginsvc to requestor;
    rec mainBlock
    {
      choice at requestor
      {          // GET SUPPLIER INFO
        getsuppliers(uuid) from requestor to authorisersvc;
        choice at authorisersvc
        {        // DENIED
          deny() from authorisersvc to requestor;
        } or {      // PREPARE FILTERED SUPPLIER INFO FOR REQUESTOR
          getsuppliers() from authorisersvc to suppliersvc;
          suppliers() from suppliersvc to authorisersvc;
          filter(usercontext, filters, supplierdetails) from authorisersvc to filtersvc;
          filtered() from filtersvc to authorisersvc;
          suppliers() from authorisersvc to requestor;
        }
        continue mainBlock;
      } or {        // GET CONTRACT INFO
        getcontracts() from requestor to authorisersvc;
        choice at authoriser
        {        // DENIED
          deny() from authorisersvc to requestor;
        } or {// PREPARE FILTERED SUPPLIER INFO FOR REQUESTOR
          getcontracts() from authorisersvc to contractsvc;
          suppliers() from contractsvc to authorisersvc;
          filter(usercontext, filters, contractdetails) from authorisersvc to filtersvc;
          filtered() from filtersvc to authorisersvc;
          contracts() from authorisersvc to requestor;
        }
        continue mainBlock;
      }
    }
  }
}

